name: SonarQube Analysis

on:
  push:
    branches: 
      - "**"
  pull_request:
    branches: 
      - "**"

jobs:
  sonar:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetches all history for better SonarQube analysis
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install coverage
      
      - name: Run Tests with Coverage for App Laporan Only
        env:
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
        run: |
          # Run tests with coverage for laporan app
          coverage run manage.py test laporan
          
          # Generate XML report for SonarQube
          coverage xml
          
          # Display coverage report
          echo "=== Coverage Report ==="
          coverage report --include="laporan/*"
          
          # Extract coverage percentage
          COVERAGE_PCT=$(coverage report --include="laporan/*" | grep TOTAL | awk '{print $NF}' | sed 's/%//')
          echo "Coverage for laporan app: ${COVERAGE_PCT}%"
          echo "COVERAGE_PCT=${COVERAGE_PCT}" >> $GITHUB_ENV
      
      - name: Quality Gate - Coverage Check
        run: |
          # Define minimum coverage threshold
          MIN_COVERAGE=85
          
          if [ -z "$COVERAGE_PCT" ]; then
            echo "::warning::Could not determine coverage percentage"
          elif (( $(echo "$COVERAGE_PCT < $MIN_COVERAGE" | bc -l) )); then
            echo "::error::Code coverage is below minimum required: ${COVERAGE_PCT}% < ${MIN_COVERAGE}%"
            echo "Please improve test coverage for the laporan app."
            exit 1
          else
            echo "::notice::✅ Code coverage meets requirements: ${COVERAGE_PCT}% ≥ ${MIN_COVERAGE}%"
          fi
      
      - name: Run SonarQube Scanner
        uses: SonarSource/sonarqube-scan-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.projectKey=dkn-pos-umkm-be
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.exclusions=manage.py,backend/settings.py,backend/wsgi.py,backend/asgi.py,backend/urls.py,backend/migrations/**,**/migrations/**,**/tests/**,**/test_*.py
            -Dsonar.inclusions=laporan/**
            -Dsonar.qualitygate.wait=true

      - name: Create Coverage Badge
        if: success() && github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          # Create a simple text report for reference
          mkdir -p reports
          echo "Laporan App Coverage: ${COVERAGE_PCT}%" > reports/coverage-report.txt
          echo "Minimum Required: 85%" >> reports/coverage-report.txt
          echo "Status: $([ $(echo "$COVERAGE_PCT >= 85" | bc -l) -eq 1 ] && echo "PASS ✅" || echo "FAIL ❌")" >> reports/coverage-report.txt
          echo "Date: $(date)" >> reports/coverage-report.txt
      
      - name: Upload Coverage Report
        if: always() && github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: reports/
          retention-days: 90